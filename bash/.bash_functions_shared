function docker-compose {
    echo "ERROR: Lose the dash:"
    echo -e "\tdocker compose $@"
}

function venv {
    orig=$(pwd)
    dir=$(pwd)

    while [ "$dir" != "/" ]; do
        . .venv/bin/activate > /dev/null 2>&1

        if [ "$?" == 0 ]; then
            break;
        fi

        dir="$(dirname "$dir")"

        cd $dir
    done

    cd $orig
}

function cd.. {
    if [[ "$1" == "" ]]; then
        echo -e "You have tried to use the custom-defined cd.. function."
        echo -e "Either give it a number (n) as an argument (go up n directories)."
        echo -e "Or if you intended to go up only one directory, use cd .. like you're supposed to."
        return
    fi

    for ((i = 0; i < $1; i++)); do
        cd ..
    done
}

function git {
    comms=$@
    function give_suggestion {
        echo "If you are absolutely certain you want to do this, run:"
        echo "/usr/bin/git $comms"
    }

    if [ "$1" == push ]; then
        force_push=false
        for arg in $@; do
            if [ "$arg" == "--force" ] || [ "$arg" == "-f" ]; then
                force_push=true
            fi
        done

        if [[ "$#" < 3 || ("$#" == 3 && "$force_push" == true) ]]; then
            echo "Do not push without specifying remote and branch..."
            give_suggestion 
            return 1
        fi

        branch_name="$(/usr/bin/git symbolic-ref HEAD 2>/dev/null)" ||
        branch_name="(unnamed branch)"     # detached HEAD

        branch_name=${branch_name##refs/heads/}

        pushing_to_current_branch=false
        for arg in $@; do
            if [ "$arg" == "$branch_name" ]; then # might not be a waterproof check but probably works 99.9% of the time
                pushing_to_current_branch=true
                break
            fi
        done

        if [ "$pushing_to_current_branch" = false ]; then
            echo "Are you sure you want to push to a different branch you're currently checked out on?"
            give_suggestion 
            return 1
        fi


        if [ "$force_push" == true ]; then
            protected_branches=(main master)

            for pbranch in ${protected_branches[@]}; do
                for arg in $@; do
                    if [ "$arg" == "$pbranch" ]; then
                        echo "You really should force push to $arg only with extreme caution!"
                        give_suggestion
                        return 1
                    fi
                done
            done
        fi
    fi

    /usr/bin/git $@
}

function cl {
  contents="$@"
  size=${#contents}
  echo -n $@ | xclip -selection clipboard

  if [ "$size" -lt 140 ]; then
    echo "\"$contents\" copied to clipboard!"
  else
    echo 'Input copied to clipboard!'
  fi
}

function tmux_exit {
  tmux kill-session
}

function gs {
  git status $@
}

function python {
  python3 $@
}

function gdiff {
  git difftool -y $@
}

function gl {
  git log $@
}

function ga {
  git add $@
}

function gc {
  git commit $@
}

function c {
  clear
}

function h {
  history
}

function arch {
  distrobox-enter Arch
}

function krusader {
  if [ "$1" == "" ]; then
    /usr/bin/krusader $(pwd)
  else
    /usr/bin/krusader $@
  fi
}

# this needs to be an alias because the script has to be sourced for the
# directory change to actually persist
alias sd="source ___fzf_dir_move"
